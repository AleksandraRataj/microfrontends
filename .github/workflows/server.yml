name: deploy-server
on:
  push:
    branches:
      - master
    paths:
      - 'packages/server/**'
defaults:
  run:
    working-directory: packages/server
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - run: npm install
      - run: npm run build
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: |
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=${{ secrets.EC2_INSTANCE_NAME }}" --query "Reservations[*].Instances[*].InstanceId" --output text)
          PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
          echo "Public IP: $PUBLIC_IP"
          scp -i ${{ secrets.AWS_EC2_KEY_PAIR }} -o StrictHostKeyChecking=no -r . ubuntu@$PUBLIC_IP:~/server
          ssh -i ${{ secrets.AWS_EC2_KEY_PAIR }} -o StrictHostKeyChecking=no ubuntu@$PUBLIC_IP << EOF
            cd ~/server
            npm install
            pm2 restart all || pm2 start npm --name "server" -- run start
          EOF
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
